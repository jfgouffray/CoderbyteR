library(dplyr)
library(readr)
library(plyr)
library(stringr)

report1 <- read_csv("//freshherbs.com/DFS02/HarrisonburgUsers/jgouffray/Desktop/sample set 1.csv")
report2 <- read_csv("//freshherbs.com/DFS02/HarrisonburgUsers/jgouffray/Desktop/sample set 2.csv")



## TASK 1 ##

#Scoping the Data
tibble(report1)

#Getting Frequencies
t1 = table(report1$ReportsTo)
t1 = data.frame(t1)

#removing NA values
report1 = filter(report1, !is.na(ReportsTo))

#Getting Average Ages based on desired subset
#Note:  The apply would be a more efficient approach
AndrePerezAges = report1$Age[report1$ReportsTo=="Andre Perez"]
AndrewSmithAges = report1$Age[report1$ReportsTo=="Andrew Smith"]
BobBossAges = report1$Age[report1$ReportsTo=="Bob Boss"]
DanielSmithAges = report1$Age[report1$ReportsTo=="Daniel Smith"]
DavidSAgeAges = report1$Age[report1$ReportsTo=="David S"]
JennyRichardsAges = report1$Age[report1$ReportsTo=="Jenny Richards"]
KatieWalkerAges = report1$Age[report1$ReportsTo=="Katie Walker"]
MarthaJonesAges = report1$Age[report1$ReportsTo=="Martha Jones"]


AverageAge = c(mean(AndrePerezAges),
               mean(AndrewSmithAges),
               as.integer(mean(BobBossAges)),
               mean(DanielSmithAges),
               mean(DavidSAgeAges),
               as.integer(mean(JennyRichardsAges)),
               as.integer(mean(KatieWalkerAges)),
               mean(MarthaJonesAges))

t1= cbind(t1,AverageAge)

names(t1)[1]<-"Supervisor"
names(t1)[2]<-"# Of People Under Supervision"

tibble(t1)
Task1Completed = t1

## TASK 2 ##

#Making Dates Workable
report2$compatibledate<-as.Date(report2$StartDate,format="%M/%d/%y")
report2$days = difftime("2021-05-11",report2$compatibledate,units=c("days"))
report2$days1 = str_split_fixed(report2$days, "_", 2)

#Renaming Columns
names(report2)[3] <-"Start Date"
names(report2)[4] <-"Days Worked"

#Converting to Numerics
daysworked = report2$`Days Worked`
daysworked = as.numeric(daysworked)
report2$daysworked = daysworked

#Cleaning COlumns
report2 = report2[,-4]

#Converting Days to years
report2$yearsworked = report2$daysworked/365

#Combining Column Names in report1 to create common linkage for merge function
report1$FullName = paste(report1$FirstName,report1$LastName)
report1 = report1[,c(-2,-3)]
fullreport = merge(report1,report2,by = "FullName")

#finding missing value
report2$FullName[!(report2$FullName %in% report1$FullName)]


positiontable = table(fullreport$Position)
positiontable = data.frame(positiontable)
positions = as.character(positiontable$Var1)
fullreport = fullreport[-26,]


#Getting Average Tenure. Again apply function would have been better decision
fullreport$yearsworked = as.numeric(fullreport$yearsworked)
accountanttime = mean(fullreport$yearsworked[fullreport$Position=="Accountant"])
analysttime = mean(fullreport$yearsworked[fullreport$Position=="Analyst"])
assistanttime = mean(fullreport$yearsworked[fullreport$Position=="Assistant"])
CEOtime = mean(fullreport$yearsworked[fullreport$Position=="CEO"])
CFOtime = mean(fullreport$yearsworked[fullreport$Position=="CFO"])
ContractorTime = mean(fullreport$yearsworked[fullreport$Position=="Contractor"])
CTOtime = mean(fullreport$yearsworked[fullreport$Position=="CTO"])
DirectorTime = mean(fullreport$yearsworked[fullreport$Position=="Director"])
EngineerTime = mean(fullreport$yearsworked[report1$Position=="Engineer"])
FinanceManagerTime = mean(fullreport$yearsworked[fullreport$Position=="Finance Manager"])
HRTime = mean(fullreport$yearsworked[fullreport$Position=="HR"])
InternTime = mean(fullreport$yearsworked[fullreport$Position=="Intern"])
SalesTime = mean(fullreport$yearsworked[fullreport$Position=="Sales"])

averagetime = c(accountanttime,analysttime,assistanttime,CEOtime,CFOtime,ContractorTime,
                         CTOtime,DirectorTime,EngineerTime,FinanceManagerTime,HRTime,InternTime,SalesTime)
averagetime

positiontable = positiontable[-14,]
positions = positiontable$Var1
finalframe = data.frame(positions,averagetime)

#renaming
names(finalframe)[1]="Position"
names(finalframe)[2]="Tenure"

#rounding values to one decimal place
finalframe = arrange(finalframe,Tenure)
finalframe$Tenure = round(finalframe$Tenure,digits=1)
finalframe

#done
Task2Complete = finalframe
Task2Complete

# Task 3 #
IDs_Where_First_Name_Starts_With_M = report1$ID[grep("^[M].*", report1$FullName)]
show(IDs_Where_First_Name_Starts_With_M)

#Here it is as a data frame
IDS_if_First_Name_Starts_With_M = data.frame(IDs_Where_First_Name_Starts_With_M)
names(IDS_if_First_Name_Starts_With_M)[1] = "IDs Where First Name Starts With M"
IDS_if_First_Name_Starts_With_M



# Task 4 #
library(ggplot2)
fullreport$Age
fullreport$yearsworked
ggplot(fullreport, aes(x=Age, y=yearsworked,)) + geom_point(color='red')+ylab("Tenure")





